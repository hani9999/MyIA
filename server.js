const express = require("express");
const askGemini = require("./puppeteer-gemini");

const app = express();
const port = 8080;

const bodyParser = require("body-parser");
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

const queue = [];
let processing = false;

async function processQueue() {
  if (processing || queue.length === 0) return;

  processing = true;
  const { question, res } = queue.shift();

  console.log("๐ค ุณุคุงู ุฌุฏูุฏ:", question);

  try {
    const answer = await askGemini(question);
    res.json({ answer });
  } catch (err) {
    console.error("โ ุฎุทุฃ ุฃุซูุงุก ุณุคุงู Gemini:", err);
    res.json({ answer: "โ ูุดู ูู ุงููุนุงูุฌุฉ." });
  }

  processing = false;
  processQueue();
}

app.post("/ask", async (req, res) => {
  const question = req.body.question;
  if (!question) {
    return res.json({ answer: "โ ูุง ููุฌุฏ ุณุคุงู." });
  }

  queue.push({ question, res });
  processQueue();
});

// โ ุชุดุบูู ุงูุฎุงุฏู ูุฅุฑุณุงู ุณุคุงู ูุจุงุดุฑ ุจุนุฏ ุงูุฅููุงุน
app.listen(port, async () => {
  console.log(`โ ุงูุฎุงุฏู ูุนูู ุนูู http://localhost:${port}`);

  console.log("๐ ุฅุฑุณุงู ุณุคุงู ุชุฌุฑูุจู ูุจุงุดุฑุฉ...");
  try {
    const answer = await askGemini("ูุง ูู ุนุงุตูุฉ ุงูุฌุฒุงุฆุฑุ");
    console.log("๐ฏ ุงูุฌูุงุจ:", answer);
  } catch (error) {
    console.error("โ ูุดู ูู ุงูุญุตูู ุนูู ุงูุฌูุงุจ:", error.message);
  }
});
